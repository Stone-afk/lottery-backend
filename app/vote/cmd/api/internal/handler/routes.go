// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	vote "looklook/app/vote/cmd/api/internal/handler/vote"
	"looklook/app/vote/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 创建投票设置接口
				Method:  http.MethodPost,
				Path:    "/vote/createVote",
				Handler: vote.CreateVoteHandler(serverCtx),
			},
			{
				// 开启或关闭投票设置
				Method:  http.MethodPost,
				Path:    "/vote/enableVoteDetail",
				Handler: vote.EnableVoteHandler(serverCtx),
			},
			{
				// 编辑投票设置接口
				Method:  http.MethodPost,
				Path:    "/vote/updateVote",
				Handler: vote.UpdateVoteHandler(serverCtx),
			},
			{
				// 查看投票设置详情
				Method:  http.MethodPost,
				Path:    "/vote/viewVoteDetail",
				Handler: vote.ViewVoteDetailHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/vote/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				// 新增投票记录
				Method:  http.MethodPost,
				Path:    "/vote/createVoteRecord",
				Handler: vote.CreateVoteRecordHandler(serverCtx),
			},
			{
				// 查看当前用户投票记录
				Method:  http.MethodPost,
				Path:    "/vote/viewUserVoteRecordDetail",
				Handler: vote.ViewUserVoteRecordDetailHandler(serverCtx),
			},
			{
				// 查看投票记录详情
				Method:  http.MethodPost,
				Path:    "/vote/viewVoteRecordDetail",
				Handler: vote.ViewVoteRecordDetailHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/vote/v1"),
	)
}
